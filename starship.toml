# palette = "catppuccin_mocha"
command_timeout = 600000


# Which is equivalent to
format = """
$username\
$hostname\
$localip\
$shlvl\
$singularity\
$kubernetes\
$directory\
$vcsh\
$fossil_branch\
$fossil_metrics\
${custom.jj}\
${custom.git_branch}\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$pijul_channel\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$gleam\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$quarto\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$typst\
$vlang\
$vagrant\
$zig\
$buf\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$nats\
$direnv\
$env_var\
$crystal\
$custom\
$sudo\
$cmd_duration\
$line_break\
$jobs\
$battery\
$time\
$status\
$os\
$container\
$shell\
$character"""

[aws]
symbol = "  "
disabled = true

[gcloud]
disabled = true

[lua]
disabled = true

[kubernetes]
symbol = ""
disabled = false

[[kubernetes.contexts]]
context_pattern = "arn:aws:eks:.*cluster\\/(?P<cluster>[\\w-]+)"
context_alias = "aws-$cluster"

[[kubernetes.contexts]]
context_pattern = "gke_.*_(?P<cluster>[\\w-]+)"
context_alias = "gke-$cluster"


[conda]
disabled = true
symbol = " "

[dart]
disabled = true
symbol = " "

[directory]
truncation_length = 4
# Catppuccin 'lavender'
# style = "bold lavender"
read_only = " "

[docker_context]
disabled = true
symbol = " "

[elixir]
disabled = true
symbol = " "

[elm]
disabled = true
symbol = " "

[git_state]
disabled = true

[git_commit]
disabled = true

[git_metrics]
disabled = true

[git_branch]
disabled = true
symbol = " "

[golang]
disabled = true
symbol = " "

[hg_branch]
disabled = true
symbol = " "

[java]
disabled = true
symbol = " "

[julia]
disabled = true
symbol = " "

[memory_usage]
disabled = true
symbol = " "

[nim]
disabled = true
symbol = " "

[nix_shell]
disabled = true
symbol = " "

[package]
disabled = true
symbol = ""

[perl]
disabled = true
symbol = " "

[php]
disabled = true
symbol = " "

[python]
disabled = true
symbol = " "

[ruby]
disabled = true
symbol = " "

[rust]
disabled = true
symbol = " "

[scala]
disabled = true
symbol = " "

[shlvl]
disabled = true
symbol = " "

[swift]

[dotnet]
disabled = true

[nodejs]
format = "via[ 󰎙 $version](bold green) "

[buf]
disabled = true


[custom.jj]
ignore_timeout = true
description = "The current jj status"
detect_folders = [".jj"]
symbol = " "
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    raw_escape_sequence("\x1b[1;32m") ++ "|" ++ raw_escape_sequence("\x1b[0m"),
    raw_escape_sequence("\x1b[1;31m") ++ concat(
      if(conflict, ""),
      if(divergent, "󰃻"),
      if(hidden, "󱞞"),
      if(immutable, ""),
    ) ++ raw_escape_sequence("\x1b[0m"),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ coalesce(
      truncate_end(29, description.first_line(), "…"),
      "(no description set)",
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''
format = "[on](green bold) [$symbol](purple bold)$output "

# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"

